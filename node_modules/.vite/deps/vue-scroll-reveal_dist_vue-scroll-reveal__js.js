import {
  init_scrollreveal_es,
  scrollreveal_es_exports
} from "./chunk-PKAP2FYJ.js";
import {
  __commonJS,
  __toCommonJS
} from "./chunk-CF3WPAMV.js";

// ../node_modules/vue-scroll-reveal/dist/vue-scroll-reveal.js
var require_vue_scroll_reveal = __commonJS({
  "../node_modules/vue-scroll-reveal/dist/vue-scroll-reveal.js"(exports, module) {
    (function(global, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory(exports, (init_scrollreveal_es(), __toCommonJS(scrollreveal_es_exports))) : typeof define === "function" && define.amd ? define(["exports", "scrollreveal"], factory) : (global = typeof globalThis !== "undefined" ? globalThis : global || self, factory(global["vue-scroll-reveal"] = {}, global.ScrollReveal));
    })(exports, function(exports2, ScrollReveal) {
      "use strict";
      function _interopDefaultLegacy(e) {
        return e && typeof e === "object" && "default" in e ? e : { "default": e };
      }
      var ScrollReveal__default = _interopDefaultLegacy(ScrollReveal);
      function reveal(el, value, modifiers) {
        const options = value || {};
        if (modifiers) {
          if (modifiers.reset) {
            options.reset = true;
          }
          if (modifiers.nomobile) {
            options.mobile = false;
          }
          if (modifiers.nodesktop) {
            options.desktop = false;
          }
        }
        if (typeof options.class === "string") {
          el.classList.add(options.class);
          delete options.class;
        }
        ScrollReveal__default["default"]().reveal(el, options);
      }
      const vScrollReveal = {
        mounted(el, { value, modifiers }) {
          reveal(el, value, modifiers);
        },
        updated(el, { value, modifiers }) {
          reveal(el, value, modifiers);
        },
        getSSRProps() {
          return {};
        }
      };
      function createScrollRevealDirective(defaultOptions) {
        return {
          mounted(el, { value, modifiers }) {
            reveal(el, Object.assign({}, defaultOptions, value), modifiers);
          },
          updated(el, { value, modifiers }) {
            reveal(el, Object.assign({}, defaultOptions, value), modifiers);
          },
          getSSRProps() {
            return {};
          }
        };
      }
      exports2.createScrollRevealDirective = createScrollRevealDirective;
      exports2.vScrollReveal = vScrollReveal;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});
export default require_vue_scroll_reveal();
//# sourceMappingURL=vue-scroll-reveal_dist_vue-scroll-reveal__js.js.map
